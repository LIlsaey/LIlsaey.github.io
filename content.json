{"meta":{"title":"莉莎的喵屋","subtitle":"Lilsaey","description":"猫与黄油面包哪面向下","author":"lilsaey","url":"https://lilsaey.github.io","root":"/"},"pages":[{"title":"关于本站","date":"2020-04-19T04:58:56.000Z","updated":"2022-05-10T03:22:27.315Z","comments":false,"path":"about/index.html","permalink":"https://lilsaey.github.io/about/index.html","excerpt":"","text":"忧郁の莉莎cn: lilsaey爱好: 计算机、摄影 “ 认识自我、超越自我 “ 那么你离成功就又进了一步！ 当你在项目中感觉所要学习的人和事越来越多时，说明你在 成长 。 当你感觉要责怪的人和事越来越少时，说明你在 成熟 。 当你在项目中不断获得了友谊和朋友时，说明你将取得项目的 成功 。 友链申请格式： 网站名称 链接 站点头像 描述 联系我QQ：2810247228 （嘀嘀~，麻烦让一下，我要开车了！）邮箱：lilsaey@163.comTwitter: lilsaey 座右铭：既然选择了远方 便只顾风雨兼程"},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-27T12:40:24.587Z","comments":true,"path":"archives/index.html","permalink":"https://lilsaey.github.io/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-11-24T07:12:19.000Z","updated":"2021-07-26T14:44:28.785Z","comments":false,"path":"categories/index.html","permalink":"https://lilsaey.github.io/categories/index.html","excerpt":"","text":""},{"title":"留言板","date":"2020-10-31T02:11:28.000Z","updated":"2021-11-23T10:50:01.880Z","comments":false,"path":"comments/index.html","permalink":"https://lilsaey.github.io/comments/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-06-07T14:17:49.000Z","updated":"2021-07-27T07:31:10.990Z","comments":true,"path":"link/index.html","permalink":"https://lilsaey.github.io/link/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-11-24T07:14:39.000Z","updated":"2021-07-26T14:44:42.337Z","comments":false,"path":"tags/index.html","permalink":"https://lilsaey.github.io/tags/index.html","excerpt":"","text":""},{"title":"我的歌单","date":"2019-05-17T08:14:00.000Z","updated":"2021-07-26T13:06:52.537Z","comments":true,"path":"music/index.html","permalink":"https://lilsaey.github.io/music/index.html","excerpt":"","text":""},{"title":"相册","date":"2021-10-14T02:13:24.113Z","updated":"2021-10-14T02:13:24.113Z","comments":false,"path":"List/gallery/index.html","permalink":"https://lilsaey.github.io/List/gallery/index.html","excerpt":"","text":"壁紙 世俗的欲望 OH MY GIRL 關於OH MY GIRL的圖片"},{"title":"Music-BBOX","date":"2020-04-23T04:58:56.000Z","updated":"2021-07-26T07:32:21.052Z","comments":false,"path":"List/music/index.html","permalink":"https://lilsaey.github.io/List/music/index.html","excerpt":"","text":""},{"title":"","date":"2019-08-10T08:41:10.000Z","updated":"2021-07-26T07:32:29.746Z","comments":false,"path":"List/movies/index.html","permalink":"https://lilsaey.github.io/List/movies/index.html","excerpt":"","text":"励志视频"},{"title":"","date":"2021-09-28T14:56:14.000Z","updated":"2021-09-28T16:44:43.445Z","comments":false,"path":"List/gallery/ohmygirl/index.html","permalink":"https://lilsaey.github.io/List/gallery/ohmygirl/index.html","excerpt":"","text":""},{"title":"","date":"2021-09-28T14:56:13.000Z","updated":"2021-10-14T02:11:35.135Z","comments":false,"path":"List/gallery/wallpaper/index.html","permalink":"https://lilsaey.github.io/List/gallery/wallpaper/index.html","excerpt":"","text":""},{"title":"说说","date":"2022-05-10T06:08:59.000Z","updated":"2022-05-10T06:13:33.745Z","comments":true,"path":"artitalk/index.html","permalink":"https://lilsaey.github.io/artitalk/index.html","excerpt":"","text":""}],"posts":[{"title":"提问的智慧","slug":"02-提问的智慧","date":"2022-05-27T13:00:00.000Z","updated":"2022-05-09T04:22:02.459Z","comments":true,"path":"posts/2.html","link":"","permalink":"https://lilsaey.github.io/posts/2.html","excerpt":"","text":"什么才是提问的艺术 提问的智慧艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）Thyrsus Enterprises esr@thyrsus.com 瑞克.莫恩（Rick Moen）respond-auto@linuxmafia.com版权©2001, 2006 Eric S. Raymond, Rick Moen 修订历史修订版 3.9 2013年4月23日 esr修正链接修订版 3.8 2012年6月19日 esr修正链接修订版 3.7 2010年12月6日 esr对于英语为第二语言人士的有益建议修订版 3.7 2010年11月2日 esr几种翻译不见了修订版 3.6 2008年3月19日 esr小更新及新链接修订版 3.5 2008年1月2日 esr勘误及一些翻译链接修订版 3.4 2007年3月24日 esr新章节：“关于代码的问题”修订版 3.3 2006年9月29日 esr增加凯.尼格曼（Kai Niggemann）的一个好建议修订版 3.2 2006年1月10日 esr加入瑞克.莫恩（Rick Moen）编写的内容修订版 3.1 2004年10月28日 esr文档“谷歌是你的朋友！”修订版 3.0 2004年2月2日 esr主要新增在网页论坛应有的礼节 原文：How To Ask Questions The Smart Way翻译：王刚 &lt;yafrank at 126 dot com &gt;时间：2013年10月26日内容 目录 弃权申明 引言 提问前 提问时 仔细挑选论坛 面向新手的论坛和互联网中继聊天（IRC）通常响应最快 第二步，使用项目的邮件列表 使用有意义且明确的主题 使问题容易回复 用清晰、语法、拼写正确的语句书写 使用易于读取且标准的文件格式发送问题 描述问题应准确且有内容 量不在多，精炼则灵 别急于宣称找到Bug 低声下气代替不了做自己的家庭作业 描述问题症状而不是猜测 按时间先后罗列问题症状 描述目标而不是过程 别要求私下回复电邮 提问应明确 关于代码的问题 别张贴家庭作业式问题 删除无意义的要求 不要把问题标记为“紧急”，即使对你而言的确如此 礼貌总是有益的 问题解决后追加一条简要说明 如何解读回答 “读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸 如果还不明白…… 对待无礼 别象失败者那样反应 提问禁忌 好问题与坏问题 如果得不到回答 如何更好地回答 相关资源 鸣谢 译文： 印尼语 白俄罗斯语 巴西葡萄牙语 简体中文 荷兰语 法语 乔治亚语 德语 希腊语 希伯来语 日语 波兰语 葡萄牙语 罗马尼亚语 俄语 西班牙语 泰语 如果你想复制、镜像、翻译或引用本文，请参阅我的 复制协议。 弃权申明许多项目的网站在如何取得帮助的部分链接了本文，这没有关系，也正是我们想要的。但如果你是该项目生成此链接的网管，请在链接附近显著位置注明：我们不提供该项目的服务支持！ 我们已经领教了没有此说明带来的痛苦，我们将不停地被一些白痴纠缠，他们认为既然我们发布了本文，那么我们就有责任解决世上所有的技术问题。 如果你是因为需要帮助正在阅读本文，然后就带着可以直接从作者那取得帮助的印象离开，那么 你 就不幸成了我们所说的白痴之一。 别向 我们 提问，我们不会理睬的。 我们只是在这教你如何从那些真正懂得你软硬件问题的人那里取得帮助，但 99.9％ 的时间我们不会是那些人。除非你非常地 确定 本文的作者是你遇到问题方面的专家，请不要打搅，这样大家都更开心一点。 引言在 黑客 的世界里，你所提技术问题的解答很大程度上取决于你提问的方式与解决此问题的难度，本文将教你如何提问才更有可能得到满意的答复。 开源程序的应用已经很广，你通常可以从其他更有经验的用户而不是黑客那里得到解答。这是好事，他们一般对新手常有的毛病更容忍一点。然尔，使用我们推荐的方法，象对待黑客那样对待这些有经验的用户，通常能最有效地得到问题的解答。 第一件需要明白的事是黑客喜欢难题和激发思考的好问题。假如不是这样，我们也不会写本文了。如果你能提出一个有趣的问题让我们咀嚼玩味，我们会感激你。好问题是种激励与礼物，帮助我们发展认知，揭示没有注意或想到的问题。在黑客中，“好问题！” 是非常热烈而真挚的赞许。 此外，黑客还有遇到简单问题就表现出敌视或傲慢的名声。有时，我们看起来还对新手和愚蠢的家伙有条件反射式的无礼，但事情并不真是这样。 我们只是毫无歉意地敌视那些提问前不愿思考、不做自己家庭作业的人。这种人就象时间无底洞──他们只知道索取，不愿意付出，他们浪费了时间，这些时间本可用于其它更有趣的问题或更值得回答的人。我们将这种人叫做 “失败者（loser）” （由于历史原因，我们有时将“loser”拼写为“lusers” 。） 我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，计算机只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做，我们承认这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。不过，我们回答问题的风格是为了适应那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就会在自己能做得最好的事情上不再那么犀利。 我们（大多数）是自愿者， 从自己繁忙的生活中抽时间来回答问题，有时会力不从心。因此，我们会毫不留情地滤除问题，特别是那些看起来象是失败者提的，以便更有效地把回答问题的时间留给那些胜利者。 如果你认为这种态度令人反感、以施惠者自居或傲慢自大，请检查你的假设，我们并未要求你屈服──事实上，假如你做了该做的努力，我们中的大多数将非常乐意平等地与你交流，并欢迎你接纳我们的文化。试图去帮助那些不愿自救的人对我们简直没有效率。不懂没有关系，但愚蠢地做事不行。 所以，你不必在技术上很在行才能吸引我们的注意，但你 必须 表现出能引导你在行的姿态──机 敏、有想法、善于观察、乐于主动参与问题的解决。如果你做不到这些使你与众不同的事情，我们建议你付钱跟别人签商业服务合同，而不是要求黑客无偿帮助。 如果你决定向我们求助，你不会想成为一名失败者，你也不想被看成一个失败者。得到快速有效回答的最好方法是使提问者看起来象个聪明、自信和有想法的人，并且暗示只是碰巧在某一特别问题上需要帮助。 （欢迎对本文指正，可以将建议发至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。 请注意，本文不想成为一般性的 网络礼仪 指南，我一般会拒绝那些与引出技术论坛中有用的回答不特别相关的建议。） 提问前在通过电邮、新闻组或论坛提技术问题以前，做以下事情： 尝试在你准备提问论坛的历史文档中搜索答案 尝试搜索互联网以找到答案 尝试阅读手册以找到答案 尝试阅读“常见问题文档”（FAQ）以找到答案 尝试自己检查或试验以找到答案 尝试请教懂行的朋友以找到答案 如果你是程序员，尝试阅读源代码以找到答案 提问时，请先表明你已做了上述事情，这将有助于建立你不是寄生虫与浪费别人时间的印象。最好再表述你从中 学到的东西 ，我们喜欢回答那些表现出能从答案中学习的人。 运用某些策略，比如用谷歌（Google）搜索你遇到的各种错误提示（既搜索 谷歌论坛，也搜索网页）， 这样很可能直接就找到了解决问题的文档或邮件列表线索。 即使没有结果，在邮件列表或新闻组寻求帮助时提一句“我在谷歌中搜过下列句子但没有找到什么有用的东西” 也是件好事，至少它表明了搜索引擎不能提供哪些帮助。将搜索关键词与你的问题及可能的解决方案联系起来，还有助于引导其他有类似问题的人。 别着急，不要指望几秒钟的谷歌搜索就能解决一个复杂的问题。读一下常见问题文档。在向专家提问之前，先向后靠靠放松一下，再思考一下问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑抛出，只因你的第一次搜索没有结果（或者结果太多）。 认真地思考，准备好你的问题。轻率的提问只能得到轻率的回答，或者压根没有。在提问时，你越是表现出在此前做过思考与努力去解决自己的问题，你越有可能得到真正的帮助。 注意别提错问题。如果提问基于错误的假设，某黑客多半会一边想 “愚蠢的问题……”，一边按将错就错的答案回复你，并且希望这种只是得到你自己“问的问题”而非真正所需的解答，给你一个教训。 永远不要假设你 有资格 得到解答。你没有这种资格，毕竟你没有为此服务付费。如果你能够提出有内容、有趣和激励思考的问题──那种毫无疑问能够向社区贡献经验，而不仅仅是消极地要求从别人那获取知识的问题，你将“挣到”答案。 另一方面，表明你有能力也乐意参与问题的解决是个很好的开端。“有没有人能指个方向？”，我这还差点什么？”，“我应该查哪个网站？”，通常要比 “请给出我可以用的完整步骤”更容易得到回复，因为你表明了只要有人能指个方向，你就很乐意完成剩下的过程。 提问时仔细挑选论坛要对在哪提问留心，如果你做了下述事情，多半会被一笔勾销或被看成“失败者”： 张贴与论坛主题无关的问题 在面向高级技术问题的论坛上张贴肤浅的问题，或者反之。 在太多不同的新闻组同时张贴 给既非熟人也没有义务解决你问题的人发送你私人的电邮 为保护通信的渠道不被无关的东西淹没，黑客会除掉那些没有找对地方的问题，你不会想让这种事落到自己头上的。 因此，第一步是找对论坛。谷歌和其它搜索引擎还是你的朋友，可以用它们搜索你遇到困难的软硬件问题最相关的项目网站。那里通常都有项目的常见问题（FAQ）、邮件列表及文档的链接。如果你的努力（包括 阅读 FAQ）都没有结果，这些邮件列表就是最后能取得帮助的地方。项目的网站也许还有报告Bug的流程或链接，如果是这样，去看看。 向陌生的人或论坛发送邮件极有可能是在冒险。譬如，不要假设一个内容丰富的网页的作者想充当你的免费顾问，不要对你的问题是否会受到欢迎做太乐观的估计──如果你不确定，向别处发或者压根别发。 在选择论坛、新闻组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以明确你的问题是否切题。发贴前先翻翻已有的帖子，这样可以让你感受一下那里行事的方式。事实上，张贴前在新闻组或邮件列表的历史文档中搜索与你问题相关的关键词是个极好的主意，也许就找到答案了。即使没有，也能帮助你归纳出更好的问题。 别象机关枪似的一次性“扫射”所有的帮助渠道，这就象大喊大叫一样会令人不快，温柔地一个一个来。 弄懂主题！最典型的错误之一是在某种致立于跨平台可移植的语言、库或工具的论坛中提关于 Unix 或 Windows 操作系统程序接口的问题。如果你不明白为什么这是大错，最好在搞清楚概念前什么也别问。 一般来说，在仔细挑选的公共论坛中提问比在私有论坛中提同样的问题更容易得到有用的回答。有几个道理支持这点，一是看潜在的回复者有多少，二是看论坛的参与者有多少，黑客更愿回答能启发多数人的问题。 可以理解，老练的黑客和一些流行软件的作者正在承受过多的不当消息。就象那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端──已经好几次了，一些流行软件的作者退出了对自己软件的支持，因为伴随而来的涌入其私人邮箱的垃圾邮件变得无法忍受。 面向新手的论坛和互联网中继聊天（IRC）通常响应最快本地的用户组织或者你所用的 Linux 发行版也许正在宣传新手取得帮助的论坛或 IRC 通道（在一些非英语国家，新手论坛很可能还是邮件列表），这些地方是开始提问的好去处，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。经过宣传的 IRC 通道是公开邀请提问的地方，通常可以得到实时的回复。 事实上，如果出问题的程序来自某发行版（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的项目论坛或邮件列表，（否则）该项目的黑客可能仅仅回复“用 我们的 代码”。 在任何论坛发贴以前，先看看有没有搜索功能。如果有，就试着用问题的几个关键词搜索一下，也许就有帮助。如果在此之前你已做过全面的网页搜索（你应该这样去做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。 通过论坛或 IRC 通道提供项目的用户支持有增长的趋势，电子邮件交流则更多地为项目开发者保留。所以先在论坛或 IRC 中寻求与该项目相关的帮助。 第二步，使用项目的邮件列表当某个项目存在开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文档和主页，找到项目的邮件列表并使用它。采用这种办法有几个很好的理由： 向个别开发者提的问题（如果）足够好，也将对整个项目组有益。相反，如果你认为自己的问题对整个项目组来说太愚蠢，这也不能成为骚扰个别开发者的理由。 向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导）也许太忙以至于没法回答你的问题。 大多数邮件列表都要存档，那些存档将被搜索引擎索引，如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。 如果某些问题经常被问到，开发者可以利用此信息改进文档或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。 如果一个项目既有 “用户” 也有“开发者”（或 “黑客”）邮件列表或论坛，而你又不摆弄那些代码，向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会遭受你的噪音干扰。 然尔，如果你 确信 你的问题不一般，而且在“用户” 列表或论坛中几天都没有回复，可以试试“开发者”列表或论坛。建议你在张贴前最好先暗暗地观察几天,至少看看最近几天保存的帖子,以了解那的行事方式（事实上这是参与任何私有或半私有列表的好主意） 如果你找不到一个项目的邮件列表，而只能查到项目维护者的地址，只管向其发信。即便在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。 使用有意义且明确的主题在邮件列表、新闻组或论坛中，主题是你在五十个或更少的字以内吸引有资格专家注意的黄金机会，不要用诸如 “请帮我” （更别提大写的 “请帮我！！！！”，这种主题的消息会被条件反射式地删掉）之类的唠叨浪费机会。不要用你痛苦的深度来打动我们，相反，要在这点空间中使用超级简明扼要的问题描述。 使用主题的好惯例是“对象──偏差”（式的描述），许多技术支持组织就是这样做的。在“对象”部分指明是哪一个或哪一组东西有问题，在“偏差”部分则描述与期望的行为不一致的地方。 愚蠢： 救命啊！我的笔记本视频工作不正常！ 明智： X.org 6.8.1 扭曲鼠标光标，MV1005 型号的某显卡芯片组 更明智： 使用 MV1005 型号的某显卡芯片组在 X.org 6.8.1 的鼠标光标被扭曲 编写 “对象──偏差”式描述的过程有助于你组织对问题的细致思考。是什么被影响了？仅仅是鼠标光标或者还有其它图形？只在 X.org 中出现？或只是在其 6.8.1 版中？是针对某显卡芯片组？或者只是其中的 MV1005 型号？一个黑客只需描一眼就能够立即明白什么是你遇到的问题，什么是你自己的问题。 更一般地，想象一下在一个只显示主题的文档索引中查找。让你的主题更好地反映问题，可以使下一个搜索类似问题的人能够在文档中直接就找到答案的线索，而不用再次发贴提问。 如果你想在回复中提问，确保改变主题以表明你是在问一个问题，一个主题象 Re: 测试 或者 Re: 新Bug 的消息不太可能引起足够的注意。同时，将回复中与新主题不甚相关的引用内容尽量删除。 对于列表消息，不要直接点击回复（按钮）来开始一个全新的线索，这将限制你的观众。有些邮件阅读程序，比如 mutt，允许用户按线索排序并通过折叠线索来隐藏消息，这样做的人永远看不到你发的消息。 仅仅改变主题还不够。mutt 和其它一些邮件阅读程序还要检查邮件头主题以外的其它信息，以便为其指定线索，所以宁可发一个全新的邮件。 在论坛，因为消息与特定的线索紧密结合，并且通常在线索之外不可见，好的提问方式略有不同，通过回复提问并不要紧。不是所有论坛都允许在回复中出现分离的主题，而且这样做了基本上没有人会去看。不过，通过回复提问本身就是令人怀疑的做法，因为它们只会被正在查看该线索的人读到。所以，除非你 只想 在该线索当前活跃的人群中提问，还是另起炉灶比较好。 使问题容易回复以请向……回复来结束问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟考虑你的问题更麻烦。如果你的邮件客户端程序不支持这样做，换个好点的；如果是操作系统不支持所有这种邮件客户端程序，也换个好点的。 在论坛，要求通过电子邮件回复是完全无礼的，除非你确信回复的信息也许是敏感的（而且有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复线索时得到电子邮件提醒，可以要求论坛发送。几乎所有论坛都支持诸如留意本线索、有回复发送邮件等功能。 用清晰、语法、拼写正确的语句书写经验告诉我们，粗心与草率的作者通常也粗心与草率地思考和编程（我敢打赌）。为这些粗心与草率的思考者回答问题没有什么好处，我们宁可将时间花在其它地方。 清楚、良好地表达你的问题非常重要。如果你觉得这样做麻烦，我们也觉得注意（你的问题）麻烦。花点额外的精力斟酌一下字句，用不着太僵硬与正式──事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它 必须 很准确，而且有迹象表明你是在思考和关注问题。 正确地拼写、使用标点和大小写，不要将 its 混淆为 it's，loose 搞成 lose 或者将 “discrete” 弄成 “discreet”。不要全部用大写，这会被视为无礼的大声嚷嚷 （全部小写也好不到哪去，因为不易阅读。Alan Cox [注：著名黑客，Linux 内核的重要参与者] 也许可以这样做，但你不行。） 一般而言，如果你写得象个半文盲似的傻子，多半得不到理睬。也不要使用即时通讯中的简写，如将 you 简化为 u 会使你看起来象一个为了节约二次击键的半文盲式的傻子。更糟的是，如果象个小孩似地鬼画桃符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。 如果在非母语论坛提问，你的拼写与语法错误会得到有限的宽容，但懒惰完全不会被容忍（是的，我们通常看得出其中的差别）。同时，除非你知道回复者使用的语言，请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在互联网上英语是工作语言，用英语书写可以将你的问题不被阅读就被直接删除的可能性降到最低。 如果你用英语书写但它是你的第二语言，最好提醒潜在的回复者语言上可能的困难以便绕过这个问题，比如： 英语不是我的母语，请谅解拼写错误。 如果您使用某某语言，请电邮/私聊我，也许我需要您的协助翻译我的问题。 对于这个技术术语本身我很熟悉，但对于它的一些俚语或习惯表达方式就不太明白了。 我已经同时用某某语及英语提问，如果您使用两者之一回复，我很乐意翻译。 使用易于读取且标准的文件格式发送问题如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以： 使用纯文本而不是 HTML（超文本标注语言）（ 关闭HTML 并不难） 使用 MIME（多用途互联网邮件扩展）附件通常没有问题，前提是真正有内容（譬如附带的源文件或补丁），而不仅仅是邮件客户端程序生成的模板（譬如只是消息内容的拷贝）。 不要发送整段只是单行句子但多次折回的邮件（这使得回复部分内容非常困难）。设想你的读者是在80个字符宽的文本终端阅读邮件，设置你的行折回点小于 80 列。 但是，也 不要 用任何固定列折回数据（譬如日志文件拷贝或会话记录）。数据应该原样包含，使回复者确信他们看到的是与你看到的一样的东西。 在英语论坛中，不要使用’Quoted-Printable’ MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持。当它们分断时，那些文本中四处散布的 “=20”符号既难看也分散注意力，甚至有可能破坏内容的语意。 永远不要 指望黑客们阅读使用封闭的专用格式编写的文档，诸如微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就象有人将还在冒热气的猪粪倒在你门口时你的反应一样。即使他们能够处理，也很厌恶这么做。 如果你从使用视窗的电脑发送电子邮件，关闭问题颇多的微软“聪明引用”功能（在“工具” -&gt; “自动纠正选项”的“输入时自动格式化”下去掉聪明引用的选框），以免在你的邮件中到处散布垃圾字符。 在论坛，勿滥用“表情符号”和“HTML”功能(当它们提供时)。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来象个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是有用的回复更有兴趣。 如果你使用图形用户界面的邮件客户端程序(如网景公司的 Messenger、微软公司的 Outlook 或者其它类似的)，注意它们的缺省配置不一定满足这些要求。大多数这类程序有基于菜单的查看源码命令，用它来检查发送文件夹中的消息，以确保发送的是没有多余杂质的纯文本文件。 描述问题应准确且有内容 仔细、清楚地描述问题的症状 描述问题发生的环境(主机、操作系统、应用程序，任何相关的)，提供销售商的发行版和版本号（如：“Fedora Core 7”、“Slackware 9.1”等） 描述提问前做过的研究及其理解。 描述提问前为确定问题而采取的诊断步骤。 描述最近对计算机或软件配置的任何相关改变。 如果可能，提供在可控环境下重现问题的方法。 尽最大努力预测黑客会提到的问题，并提前备好答案。 如果你认为是代码有问题，向黑客提供在可控环境下重现问题的方法尤其重要。当你这么做时，得到有用且及时回复的可能性将大大增加。 西蒙.泰瑟姆（Simon Tatham）写过一篇《如何有效报告Bug》的文章，我强烈推荐各位阅读。 量不在多，精炼则灵你应该（写得）精炼且有内容，简单地将一大堆代码或数据罗列在求助消息中达不到目的。如果你有一个很大且复杂的测试样例让程序崩溃，尝试将其裁剪得越小越好。 至少有三个理由支持这点。第一，让别人看到你在努力简化问题使你更有可能得到回复。第二，简化问题使你更有可能得到 有用的 回复。第三，在提纯Bug报告的过程中，你可能自己就找到了解决办法或权宜之计。 别急于宣称找到Bug当你在一个软件中遇到问题，除非你 非常、非常 的有根据，不要动辄声称找到了Bug。提示：除非你能提供解决问题的源代码补丁，或者对前一版本的回归测试表现出不正确的行为，否则你都多半不够完全确信。对于网页和文档也如此，如果你（声称）发现了文档的“Bug”，你应该能提供相应位置的替代文本。 记住，还有许多其它用户并未经历你遇到的问题，否则你在阅读文档或搜索网页时就应该发现了（[你在报怨前已经做了这些，是吧 ？](#你在报怨前已经做了这些，是吧 ？)）。这也意味着很有可能是你弄错了而不是软件本身有问题。 编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了Bug，也就置疑了他们的能力，即使你是对的，也有可能会使其中的部分人感到不快。（此外，）在主题中嚷嚷“Bug”也是特别不老练的。 提问时，即使你私下非常确信已经发现一个真正的Bug，最好写得象是 你 做错了什么。如果真的有Bug，你会在回复中看到这点。这样做的话，如果真有虫子，维护者就会向你道歉，这总比你弄砸了然后欠别人一个道歉要强。 低声下气代替不了做自己的家庭作业有些人明白他们不应该粗鲁或傲慢地行事并要求得到答复，但他们退到相反的低声下气的极端：“我知道我只是个可怜的新丁，一个失败者，但……”。这既使人困扰，也没有用，当伴随着对实际问题含糊的描述时还特别令人反感。 别用低级灵长类动物的办法浪费你我的时间，相反，尽可能清楚地描述背景情况和你的问题，这比低声下气更好地摆正了你的位置。 有时，论坛设有单独的初学者提问版面，如果你真的认为遇到了肤浅的问题，到那去就是了，但一样别低声下气。 描述问题症状而不是猜测告诉黑客是什么导致了问题是没用的（如果你的诊断理论是了不起的东西，你还会向别人咨询求助吗？）。所以，确保只是告诉他们问题的原始症状，而不是你的解释和理论，让他们来解释和诊断。如果你认为陈述自己的猜测很重要，应清楚地说明这只是你的猜测并描述为什么它们不起作用。 愚蠢： 我在编译内核时接连遇到 SIG11 错误，怀疑主板上的某根电路丝断了，找到它们的最好办法是什么？ 明智： 我组装的电脑（K6/233 CPU、FIC-PA2007 主板[威盛 Apollo VP2 芯片组]、Corsair PC133 SDRAM 256Mb 内存）最近在开机 20 分钟左右、做内核编译时频繁地报 SIG11 错，但在头 20 分钟内从不出问题。重启动不会复位时钟，但整夜关机会。更换所有内存未解决问题，相关的典型编译会话日志附后。 由于以上这点许多人似乎难以掌握，这里有句话可以提醒你：“所有的诊断专家都来自密苏里州”。美国国务院的官方座右铭则是“让我看看”（出自国会议员威勒德.D.范迪弗［Willard D. Vandiver］在1899年时的讲话：“我来自一个出产玉米、棉花、牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。”）针对诊断者而言，这并不是怀疑，而只是一种真实而有用的需求，以便让他们看到与你看到的原始证据尽可能一致的东西，而不是你的猜测与总结。（所以，）让我们看看。 按时间先后罗列问题症状刚出问题之前发生的事情通常包含有解决问题最有效的线索。所以，记录中应准确地描述你、电脑和软件在崩溃前都做了什么。在命令行处理的情况下，有会话日志（如运行脚本工具生成的）并引用相关的若干（如20）行记录会非常有帮助。 如果崩溃的程序有诊断选项（如-v详述开关），试着选择这些能在记录中增加排错信息的选项。记住，“多”不等于“好”。试着选取适当的排错级别以便提供有用的信息而不是将阅读者淹没在垃圾中。 如果你的记录很长（如超过四段），在开头简述问题随后按时间先后罗列详细过程也许更有用。这样，黑客在读你的记录时就知道该注意哪些内容了。 描述目标而不是过程如果你想弄清楚如何做某事（而不是报告一个Bug），在开头就描述你的目标，然后才陈述遇到问题的特定步骤。 经常出现这种情况，寻求技术帮助的人在脑袋里有个更高层次的目标，他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身有问题，结果要费很大的劲才能通过。 愚蠢： 我怎样才能让某图形程序的颜色拾取器取得十六进制的 RGB 值？ 明智： 我正试着用自己选定数值的颜色替换一幅图片的色表，我现在知道的唯一方法是编辑每个表槽，但却无法让某图形程序的颜色拾取器取得十六进制的 RGB 值。 第二种提法是明智的，它使得建议采用更合适的工具以完成任务的回复成为可能。 别要求私下回复电邮黑客们认为问题的解决过程应该公开、透明，此过程中如果更有才能的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为回复者也因为能力和学识被其它同行看到而得到某种回报。 当你要求私下回复时，此过程和回报都被中止。别这样做，让 回复者 来决定是否私下回答──如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人毫无意义。 对这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么“向我发电邮，我将为论坛归纳这些回复”将是神奇的句子。试着将邮件列表或新闻组从洪水般雷同的回复中解救出来是非常有礼貌的──但你必须信守诺言。 提问应明确漫无边际的问题通常也被视为没有明确限制的时间无底洞。最有可能给你有用答案的人通常也是最忙的人（假如只是因为他们承担了太多工作的话），这些人对于没有止境的时间无底洞极其敏感，所以他们也倾向于讨厌那些漫无边际的问题。 如果你明确了想让回复者做的事（如指点方向、发送代码、检查补丁或其它），你更有可能得到有用的回复。（因为）这样可以让他们集中精力并间接地设定了他们为帮助你需要花费的时间和精力上限，这很好。 要想理解专家生活的世界，可以这样设想：那里有丰富的专长资源但稀缺的响应时间。你暗中要求他们奉献的时间越少，你越有可能从这些真正懂行也真正很忙的专家那里得到解答。 所以限定你的问题以使专家回答时需要付出的时间最少──这通常与简化问题还不太一样。举个例，“请问可否指点一下哪有好一点的 X 解释？”通常要比“请解释一下 X”明智。如果你的代码不运行了，通常请别人看看哪有问题比叫他们帮你改正更明智。 关于代码的问题别要求他人给你出问题的代码排错而不提及应该从何入手。张贴几百行的代码，然后说一声“它不能运行”会让你得不到理睬。只贴几十行代码，然后说一句“在第七行以后，本应该显示，但实际出现的是”非常有可能让你得到回复。 最精确描述代码问题的方法是提供一个能展示问题的最小测试样例。什么是最小测试样例？它是对问题的展现，只需要刚好能够重现非预期行为的代码即可。如何生成一个最小测试样例？如果你知道哪一行或哪一段代码会产生问题，将其复制并提供刚好够用的外围支撑代码以构成一个完整的样例（够用是指源码刚好能被编译器、解释器或任何处理它的程序所接受）。如果你不能将问题缩小到特定的段落，复制源码并去除那些与问题无关的代码段。你能提供的最小测试样例越小越好（参见 量不在多，精炼则灵 ）。 生成一个非常小的最小测试样例并不总是可能，但尽力去做是很好的锻练，这有可能帮助你找到需要自己解决的问题。即使你找不到，黑客们喜欢看到你努力过，这将使他们更合作。 如果你只是想让别人帮忙审一下代码，在最开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。 别张贴家庭作业式问题黑客们善于发现“家庭作业”式的问题。我们中的大多数人已经做了自己的家庭作业，那是该 你 做的，以便从中学到东西。问一下提示没有关系，但不是要求完整的解决方案。 如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户组、论坛或（作为最后一招）在项目的“用户”邮件列表或论坛中提问。尽管黑客们 会 看出来，一些老用户也许仍会给你提示。 删除无意义的要求抵制这种诱惑，即在求助消息末尾加上诸如“有人能帮我吗？”或“有没有答案？”之类在语义上毫无意义的东西。第一，如果问题描述还不完整，这些附加的东西最多也只能是多余的。第二，因为它们是多余的，黑客们会认为这些东西烦人──就很有可能用逻辑上无误但打发人的回复，诸如“是的，你可以得到帮助”和“不，没有给你的帮助”。 一般来说，避免提“是或否”类型的问题，除非你想得到 “是或否”类型的回答。 不要把问题标记为“紧急”，即使对你而言的确如此这是你的问题，不要我们的。宣称“紧急”极有可能事与愿违：大多数黑客会直接删除这种消息，他们认为这是无礼和自私地企图得到即时与特殊的关照。而且“紧急”或其它有类似含义的主题有可能触发垃圾过滤规则，潜在的回复者可能永远看不到你的问题！ 有一点点局部的例外，如果你是在一些知名度很高、会使黑客们激动的地方使用程序，也许值得这样去做。在这种情况下，如果你有期限压力，也很有礼貌地提到这点，人们也许会有足够的兴趣快一点回答。 当然，这是非常冒险的，因为黑客们对什么是令人激动的标准多半与你的不同。譬如从国际空间站这样张贴没有问题，但代表感觉良好的慈善或政治原因这样做几乎肯定不行。事实上，张贴诸如“紧急：帮我救救这个毛绒绒的小海豹！”肯定会被黑客回避或光火，即使他们认为毛绒绒的小海豹很重要。 如果你觉得这不可思议，再把剩下的内容多读几遍，直到弄懂了再发贴也不迟。 礼貌总是有益的礼貌一点，使用 请 和 谢谢你的关注 或者 谢谢你的关照，让别人明白你感谢他们无偿花时间帮助你。 坦率地讲，这一点没有语法正确、文字清晰、准确、有内容和避免使用专用格式重要（同时也不能替代它们）。黑客们一般宁可读有点唐突但技术鲜明的Bug报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教我们什么来评价它的） 然尔，如果你已经谈清楚了技术问题，客气一点肯定会增加你得到有用回复的机会。 （我们必须指出，本文唯一受到一些老黑客认真反对的地方是以前曾经推荐过的“提前谢了”，一些黑客认为这隐含着事后不用再感谢任何人的暗示。我们的建议是要么先说 提前谢了，事后 再 对回复者表示感谢，要么换种方式表达，譬如用 谢谢你的关注 或 谢谢你的关照）。 问题解决后追加一条简要说明问题解决后向所有帮助过的人追加一条消息，让他们知道问题是如何解决的并再次感谢。如果问题在邮件列表或新闻组中受到广泛关注，在那里追加此消息比较恰当。 最理想的方式是向最初提问的线索回复此消息，并在主题中包含 已解决、已搞定 或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见线索 问题 X 和 问题 X-已解决 的潜在回复者就明白不用再浪费时间了（除非他个人觉得“问题 X”有趣），因此可以利用此时间去解决其它问题。 追加的消息用不着太长或太复杂，一句简单的“你好──是网线坏了！谢谢大家──比尔”就比什么都没有要强。事实上，除非解决问题的技术真正高深，一条简短而亲切的总结比长篇大论要好。说明是什么行动解决了问题，用不着重演整个排错的故事。 对于有深度的问题，张贴排错历史的摘要是恰当的。描述问题的最终状态，说明是什么解决了问题，在此之后 才指明可以避免的弯路。应避免的弯路部分应放在正确的解决方案和其它总结材料之后，而不要将此消息搞成侦探推理小说。列出那些帮助过你的名字，那样你会交到朋友的。 除了有礼貌、有内容以外，这种类型的追帖将帮助其他人在邮件列表、新闻组或论坛文档中搜索到真正解决你问题的方案，从而也让他们受益。 最后，此类追帖还让每位参与协助的人因问题的解决而产生一种满足感。如果你自己不是技术专家或黑客，相信我们，这种感觉对于你寻求帮助的老手和专家是非常重要的。问题叙述到最后不知所终总是令人沮丧的，黑客们痒痒地渴望它们被解决。挠痒痒 为你挣到的信誉将对你下次再次张贴提问非常非常的有帮助。 考虑一下怎样才能避免他人将来也遇到类似的问题，问问自己编一份文档或 FAQ 补丁会不会有帮助，如果是的话就将补丁发给维护者。 在黑客中，这种良好的后继行动实际上比传统的礼貌更重要，也是你善待他人而赢得声誉的方式，这是非常有价值的财富。 如何解读回答“读读该死的手册”（RTFM）和“搜搜该死的网络”（STFW）：如何明白你已完全搞砸有一个古老而神圣的传统：如果你收到 读读该死的手册（RTFM） 的回复，发信人认为你应该去“读读该死的手册”。他或她多半是对的，去读一下吧。 “读读该死的手册”（RTFM）有个年轻一点的亲戚，如果你收到“搜搜该死的网络”（STFW）的回复，发信人认为你应该“搜搜该死的网络”。那人多半也是对的，去搜一下吧。(更温和一点的说法是“谷歌是你的朋友！”) 在论坛，你也可能被要求去搜索论坛的文档。事实上，有人甚至可能热心地为你提供以前解决此问题的线索。但不要依赖这种关照，提问前应该先搜索一下文档。 通常，叫你搜索的人已经打开了能解决你问题的手册或网页，正在一边看一边敲键盘。这些回复意味着他认为： 第一，你要的信息很容易找到。 第二，自已找要比别人喂到嘴里能学得更多。 你不应该觉得这样就被冒犯了，按黑客的标准，回复者没有不理你就是在向你表示某种尊敬，你反而应该感谢他热切地想帮助你。 如果还不明白……如果你看不懂回答，不要马上回复一个要求说明的消息，先试试那些最初提问时用过的相同工具（如手册、FAQ、网页、懂行的朋友等）试着搞懂回答。如果还是需要说明，展现你已经明白的。 譬如，假如我告诉你：“看起来象是某输入项有问题，你需要清除它”，接着是个 不好 的回帖：“什么是某输入项？”。而这是一个 很好 的跟帖：“是的，我读了手册，某某输入项只在 -z 和 -p 开关中被提到，但都没有涉及到如何清除它们，你指的是哪一个还是我弄错了什么？” 对待无礼很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当、一针见血式的交流风格，这种风格对于更关注解决问题而不是使别人感觉舒服而混乱的人是很自然的。 如果你觉得被冒犯了，试着平静地反应。如果有人真的做了过格的事，邮件列表、新闻组或论坛中的前辈多半会招呼他。如果这 没有 发生而你却光火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而 你 将被视为有错的一方，这将伤害到你获取信息或帮助的机会。 另一方面，你会偶而真的碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击、用犀利的语言将其驳得体无完肤都是可以接受的。然尔，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外来者，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。 （有些人断言很多黑客都有轻度的自闭症或阿斯伯格综合症，缺少用于润滑人类社会“正常”交往所需的脑电路。这既可能是真也可能是假。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们 喜欢 现在这个样子，并且一般都对病号标记有站得住脚的怀疑。） 在下一节，我们会谈到另一个问题，当 你 行为不当时会受到的“冒犯”。 别象失败者那样反应在黑客社区的论坛中有那么几次你可能会搞砸──以本文描述或类似的方式。你会被示众是如何搞砸的，也许言语中还会带点颜色。 这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反，你该这样去做： 熬过去，这很正常。事实上，它是有益健康与恰当的。 社区的标准不会自己维持，它们是通过参与者积极而 公开 地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，这不是事情运作的方式。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。 也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称“如果你不想帮助用户就闭嘴”。有思路的参与者纷纷离开的结果只会使它们变成了毫无意义的唠叨与无用的技术论坛。 是夸张的“友谊”（以上述方式）还是有用？挑一个。 记着：当黑客说你搞砸了，并且(无论多么刺耳地)告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤除要容易得多。如果你无法做到感谢，至少要有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人象对待脆弱的洋娃娃那样对你。 有时候，即使你没有搞砸（或者只是别人想象你搞砸了）， 有些人也会无缘无故地攻击你本人。在这种情况下，报怨倒是 真的 会把问题搞砸。 这些找茬者要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些找茬者在给自己找麻烦，这点你不用操心。 也别让自己卷入口水战，大多数口水战最好不要理睬──当然，是在你核实它们只是口水战、没有指出你搞砸的地方，而且没有巧妙地将问题真正的答案藏于其中之后（这也是可能的）。 提问禁忌下面是些典型的愚蠢问题和黑客不回答它们时的想法。 问：我到哪可以找到某程序或 X 资源？ 问：我怎样用 X 做 Y？ 问：如何配置我的 shell 提示？ 问：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文档转为 TeX 格式吗？ 问：我的{程序、配置、SQL 语句}不运行了 问：我的视窗电脑出问题了，你能帮忙吗？ 问：我的程序不运行了，我认为系统工具X有问题 问：我安装 Linux 或 X 遇到困难，你能帮忙吗？ 问：我如何才能破解超级用户口令/盗取通道操作员的特权/查看某人的电子邮件？ 问： 我到哪可以找到某程序或 X 资源？ 答： 在我找到它的同样地方，笨旦──在网页搜索引擎上。上帝啊，难道还有人不知道如何使用 谷歌 吗？ 问： 我怎样用 X 做 Y？ 答： 如果你想解决的是 Y，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对要解决的 Y 问题糊涂，还被特定形势禁锢了思维。等他们把问题弄好再说。 问： 如何配置我的 shell 提示？ 答： 如果你有足够的智慧提这个问题，你也该有足够的智慧去 “读读该死的手册”（RTFM），然后自己去找出来。 问： 我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文档转为 TeX 格式吗？ 答： 试试就知道了。如果你试过，你既知道了答案，又不用浪费我的时间了。 问： 我的{程序、配置、SQL 语句}不运行了 答： 这不是一个问题，我也没有兴趣去猜你有什么问题──我有更要紧的事要做。看到这种东西，我的反应一般如下： 你还有什么补充吗？ 噢，太糟了，希望你能搞定。 这跟我究竟有什么关系？ 问： 我的视窗电脑出问题了，你能帮忙吗？ 答： 是的，把视窗垃圾删了，装个象 Linux 或 BSD 的开源操作系统吧。 注意：如果程序有官方的视窗版或者与视窗有交互(如 Samba)，你 可以 问与视窗相关的问题，只是别对问题是由视窗操作系统而不是程序本身造成的回复感到惊讶，因为视窗一般来说太差，这种说法一般都成立。 问： 我的程序不运行了，我认为系统工具 X 有问题 答： 你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文档作后盾。 问： 我安装 Linux 或 X 遇到困难，你能帮忙吗？ 答： 不行，我需要亲手操作你的电脑才能帮你排错，去向当地的 Linux 用户组寻求方便的帮助（你可以在 这里 找到用户组列表） 注意：如果安装问题与某 Linux 发行版有关，在针对 它 的邮件列表、论坛或本地用户组织中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 “linux”和 所有 被怀疑的硬件 [作关键词] 仔细搜索。 问： 我如何才能破解超级用户口令/盗取通道操作员的特权/查看某人的电子邮件？ 答： 想做这种事情说明你是个卑劣的家伙，想让黑客教你做这种事情说明你是个白痴。 好问题与坏问题最后，我将通过举例来演示提问的智慧。同样的问题两种提法，一种愚蠢，另一种明智。 愚蠢：我在哪能找到关于 Foonly Flurbamatic 设备的东西？ 这个问题在乞求得到 “搜搜该死的网络”（STFW） 式的回复。 明智： 我用谷歌搜索过“Foonly Flurbamatic 2600”，但没有找到什么有用的，有谁知道在哪能找到这种设备的编程信息？ 这个人已经搜索过网络了，而且听起来他可能真的遇到了问题。 愚蠢： 我不能编译某项目的源代码，它为什么这么破？ 提问者假设是别人搞砸了，太自大了。 明智： 某项目的源代码不能在某 Linux 6.2 版下编译。我读了常见问题文档，但其中没有与某 Linux 相关的内容。这是编译时的记录，我做错了什么吗？ 提问者已经指明了运行环境，读了常见问题文档（FAQ），列出了错误，也没有假设问题是别人的过错，这家伙值得注意。 愚蠢： 我的主板有问题，谁能帮我？ 某黑客对此的反应可能是：“是的，还需要帮你拍背和换尿布吗？”，然后是敲下删除键。 明智： 我在 S2464 主板上试过 X、Y 和 Z，当它们都失败后，又试了 A、B 和 C。注意我试 C 时的奇怪症状，显然某某东西正在做某某事情，这不是期望的行为。通常在 Athlon MP 主板上导致某某事情的原因是什么？有谁知道我还能再试点什么以确定问题？ 相反地，这个人看来值得回答。他或她展现了解决问题的能力而不是坐等天上掉馅饼。 在最后那个问题中，注意“给我一个回答”与“请帮我看看我还能再做点什么测试以得到启发”之间细微但重要的差别。 事实上，最后那个问题基本上源于 2001 年 8 月 Linux 内核邮件列表（lkml）上的真实事件，是我（Eric）当时提了那个问题，我发现 Tyan S2462 主板有神秘的死机现象，邮件列表成员给我提供了解决此问题的关键信息。 通过这种提问方式，我给了别人可以咀嚼玩味的东西。我设法使之对参与者既轻松又有吸引力，也表明了对同行能力的尊敬并邀请他们与我一起协商。通过告诉他们我已经走过的弯路，我还表明了对他们宝贵时间的尊重。 事后，当我感谢大家并评论这次良好的经历时，一个 Linux 内核邮件列表的成员谈到，他认为我得到答案并不是因为我的名字挂在列表上，而只是因为我正确的提问方式。 黑客们在某种方面是非常不留情面的精英分子。我想在这事上他是对的，如果我 表现得 象个不劳而获的寄生虫，不管我是谁都会被忽略或斥责。他建议将整个事件作为对其它人提问的指导，这直接导致了本文的编写。 如果得不到回答如果得不到回答，请不要认为我们不想帮你，有时只是因为被问到的小组成员的确不知道答案。没有回复不等于不被理睬，当然必须承认从外面很难看出两者的差别。 一般而言，直接将问题再张贴一次不好，这会被视为毫无意义的骚扰。耐心一点，知道你问题答案的人可能生活在不同的时区，有可能正在睡觉，也有可能你的问题一开始就没有组织好。 还有其它资源可以寻求帮助，通常是在一些面向新手的资源中。 有许多在线与本地的用户组织，虽然它们自己不编写任何软件，但是对软件很热心。这些用户组通常因互助和帮助新手而形成。 还有众多大小商业公司提供签约支持服务，别因为要付点钱才有支持就感到沮丧！毕竟，如果你车子的汽缸垫烧了，你多半还得花钱找个修理店把它弄好。即使软件没花你一分钱，你总不能指望服务支持都是免费的。 象 Linux 这样流行的软件，每个开发者至少有一万个以上的用户，一个人不可能应付这么多用户的服务要求。记住，即使你必须付费才能得到支持，也比你还得额外花钱买软件要少得多（而且对封闭源代码软件的服务支持与开源软件相比通常还要贵一点，也要差一点）。 如何更好地回答态度和善一点。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。 对初犯者私下回复。 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找 FAQ 都不知道。 如果你不确定，一定要说出来！ 一个听起来权威的错误回复比没有还要糟，别因为听起来象个专家好玩就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。 如果帮不了忙，别妨碍。 不要在具体步骤上开玩笑，那样也许会毁了用户的安装──有些可怜的呆瓜会把它当成真的指令。 探索性的反问以引出更多的细节。 如果你做得好，提问者可以学到点东西──你也可以。试试将很差的问题转变成好问题，别忘了我们都曾是新手。 尽管对那些懒虫报怨一声“读读该死的手册”（RTFM）是正当的，指出文档的位置（即使只是建议做个谷歌关键词搜索）会更好 如果你决意回答，给出好的答案。 当别人正在用错误的工具或方法时别建议笨拙的权宜之计，应推荐更好的工具，重新组织问题。 请回答真正的问题！如果提问者已经做了自己该做的研究，并且说明尝试过 X，Y，Z，A，B 与 C 都没有得到想要的結果，那么回复 试试 A 或 B 或者给出一个内容为 试一下 X，Y，Z，A，B 或 C 的链接将极其无益！ 帮助你的社区从中学习。当回复一个好问题时，问问自己 如何修改相关文件或 FAQ 文档以免再次解答同样的问题？，接着再向文档维护者发一份补丁。 如果你是在研究一番后才做出的回答，展现你的技巧而不是直接端出结果。毕竟“授人以鱼，不如授人以渔”。 相关资源如果需要个人电脑、Unix 和互联网如何工作的基础知识，参阅 Unix 和互联网工作的基本原理。 当你发布软件或补丁时，试着按 软件发布实践 操作。 鸣谢伊夫林.米切尔（Evelyn Mitchell）贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节，米哈伊尔.罗门迪克（Mikhail Ramendik）贡献了一些特别有价值的建议和改进。","categories":[{"name":"艺术","slug":"艺术","permalink":"https://lilsaey.github.io/categories/%E8%89%BA%E6%9C%AF/"}],"tags":[{"name":"提问","slug":"提问","permalink":"https://lilsaey.github.io/tags/%E6%8F%90%E9%97%AE/"}]},{"title":"Markdown语法","slug":"01-Markdown语法","date":"2021-05-27T13:00:00.000Z","updated":"2022-05-09T04:34:14.315Z","comments":true,"path":"posts/1.html","link":"","permalink":"https://lilsaey.github.io/posts/1.html","excerpt":"","text":"主要内容 Markdown是什么？谁创造了它？为什么要使用它？怎么使用？谁在用？尝试一下 正文1. Markdown是什么？Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。 2. 谁创造了它？它由Aaron Swartz和John Gruber共同设计，Aaron Swartz就是那位于去年（2013年1月11日）自杀,有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。 他有着足以让你跪拜的人生经历： 14岁参与RSS 1.0规格标准的制订。 2004年入读斯坦福，之后退学。 2005年创建Infogami，之后与Reddit合并成为其合伙人。 2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。 2011年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。 2013年1月自杀身亡。 天才都有早逝的归途。 3. 为什么要使用它？ 它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。 兼容HTML，可以转换为HTML格式发布。 跨平台使用。 越来越多的网站支持Markdown。 更方便清晰地组织你的电子邮件。（Markdown-here, Airmail） 摆脱Word（我不是认真的）。 4. 怎么使用？如果不算扩展，Markdown的语法绝对简单到让你爱不释手。 Markdown语法主要分为如下几大部分：标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \\**，符号’`’**。 4.1 标题两种形式：1）使用=和-标记一级和二级标题。 一级标题=========二级标题--------- 效果： 一级标题 二级标题 2）使用#，可表示1-6级标题。 # 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 效果： 一级标题二级标题三级标题四级标题五级标题六级标题 4.2 段落段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。 4.3 区块引用在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用，如： &gt; 区块引用&gt;&gt; 嵌套引用 效果： 区块引用 嵌套引用 4.4 代码区块代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如普通段落： void main(){ printf(“Hello, Markdown.”);} 代码区块： void main() { printf(\"Hello, Markdown.\"); } 注意:需要和普通段落之间存在空行。 4.5 强调在强调内容两侧分别加上*或者_，如： *斜体*，_斜体_**粗体**，__粗体__ 效果： 斜体，斜体粗体，粗体 4.6 列表使用·、+、或-标记无序列表，如： -（+*） 第一项-（+*） 第二项- （+*）第三项 注意：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。 效果： 第一项 第二项 第三项 有序列表的标记方式是将上述的符号换成数字,并辅以.，如： 1 . 第一项2 . 第二项3 . 第三项 效果： 第一项 第二项 第三项 4.7 分割线分割线最常使用就是三个或以上*，还可以使用-和_。 4.8 链接链接可以由两种形式生成：行内式和参考式。行内式： [younghz的Markdown库](https:://github.com/younghz/Markdown “Markdown”)。 效果： younghz的Markdown库。 参考式： [younghz的Markdown库1][1][younghz的Markdown库2][2][1]:https:://github.com/younghz/Markdown “Markdown”[2]:https:://github.com/younghz/Markdown “Markdown” 效果： younghz的Markdown库1younghz的Markdown库2 注意：上述的[1]:https:://github.com/younghz/Markdown \"Markdown\"不出现在区块中。 4.9 图片添加图片的形式和链接相似，只需在链接的基础上前方加一个！。 4.10 反斜杠\\相当于反转义作用。使符号成为普通符号。 4.11 符号’`’起到标记作用。如： `ctrl+a` 效果： ctrl+a 5. 谁在用？Markdown的使用者： GitHub 简书 Stack Overflow Apollo Moodle Reddit 等等 6. 尝试一下 Chrome下的插件诸如stackedit与markdown-here等非常方便，也不用担心平台受限。 在线的dillinger.io评价也不错 Windowns下的MarkdownPad也用过，不过免费版的体验不是很好。 Mac下的Mou是国人贡献的，口碑很好。 Linux下的ReText不错。 当然，最终境界永远都是笔下是语法，心中格式化 :)。 注意：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber](http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/ )。 以上基本是所有traditonal markdown的语法。 其它：列表的使用(非traditonal markdown)： 用|表示表格纵向边界，表头和表内容用-隔开，并可用:进行对齐设置，两边都有:则表示居中，若不加:则默认左对齐。 代码库 链接 MarkDown https://github.com/younghz/Markdown MarkDownCopy https://github.com/younghz/Markdown 关于其它扩展语法可参见具体工具的使用说明。","categories":[{"name":"技术","slug":"技术","permalink":"https://lilsaey.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"文档","slug":"文档","permalink":"https://lilsaey.github.io/tags/%E6%96%87%E6%A1%A3/"}]},{"title":"如何阅读一本书","slug":"03-如何阅读一本书","date":"2021-05-09T13:00:00.000Z","updated":"2022-05-10T03:01:14.206Z","comments":true,"path":"posts/3.html","link":"","permalink":"https://lilsaey.github.io/posts/3.html","excerpt":"","text":"如何阅读一本书[TOC] 书籍信息 书名 如何阅读一本书 作者 莫提默·J·艾德勒，查尔斯·范多伦 译者 郝明义，朱衣 出版社 商务印书馆 2004.1第一版 ISBN 7-100-04094-9/G·653 序言艾德勒 读到 英国思想家密尔（John Stuart Mill）的自传，自后改变了读书观念 1940 本书第一版出版 阅读需要训练 一、阅读的层次1、阅读的活力与艺术Q：新时代的传播媒体是否真能增进我们对自己世界的了解？ A：现代媒体以压倒性的泛滥资讯阻碍了我们的理解力 PS:类似打仗时候情报太多反而有害（隆金直呼内行） ⭐有毒的懒人包媒体通过精心设计，使思考、思想变得不再需要，让听众不需要努力即可以整理出“自己”的思绪，将直接包装后的观点装进自己的脑海中，不用思考就能表现得宜。 主动的阅读​ 一、阅读是一件主动的事 读者或听者的“接收”应该是类似捕手（主动、判断、处理各种类型的发球） ​ 二、阅读越主动、效果越好 阅读的目标1、为获得资讯而读2、为求得理解而读​ ☀:存在知识层级的差距，读者需要克服不相等的理解力，从比我们更“高杆”的人身上学习 3、娱乐（仅仅为了消遣，不做介绍），事实上当你增进资讯和理解的时候，也获得了消遣 资讯与理解的差异吸收资讯：只是知道某件事发生了； 理解：就是要搞清楚这是怎么回事，为什么会发生，与其他事实有什么关联，有什么类似的情况，同类的差异在哪里等等。 初学者的无知在未学，而学者的无知在于学后。–蒙田 第一种无知是连字都不识，当然谈不上有学问;第二种无知却是错读了许多书，反而变得无知。 Ⓜ我对蒙田的理解 （PS：一开始我感觉可能和爱因斯坦的那个认知圆一样，而不是作者的理解？当然我也找不到出处。） A man may say with some colour of truth that there is an Abecedarian ignorance that precedes knowledge, and a doctoral ignorance that comes after it: an ignorance that knowledge creates and begets, at the same time that it despatches and destroys the first. abecedarian(ˌeibisiˈdɛəriən)名词 a person who is learning the letters of the alphabet a beginner in any field of learning 出处：https://www.hyperessays.net/essays/on-vain-subtleties/ 蒙田的这篇《论华而不实》，举了很多例子说一个事物的两端是类似的，老幼都是天真，极冷极热都会灼人，虽然第二种的无知确实是那种意思，但蒙田更强调的是求中庸平实的目标，当然作者取前半句是没问题的。 学习要有活力教育类似医学和农学，开药或者施肥，最终都需要病人/作物自己恢复/成长。 思考存在于方方面面很多人认为阅读和倾听是不需要花力气的事情，相比于辅助型学习（看教材，听课），研究型学习思考存在的更多。 实际上，思考只是阅读的一部分，阅读过程中一个人还得调用他的感觉和想象力。必须观察、记忆。 （2022.04.24） 2、阅读的层次​ 读者读书的目的会决定他的阅读方式，而阅读效果取决于他花的努力和技巧 阅读的四个层次 基础阅读 elementary reading 读懂 检视阅读 inspectional reading 抓重点 分析阅读 analytical reading 完整阅读、提问题–理解 主题阅读 syntopical reading 比较阅读、广泛 3、阅读的第一个层次：基础阅读​ 官方宣称 1970年是“读书的年代” 全面教育-扫盲 阅读教育发生了变化—发音法/默读 美国的批判文化、教育研究的活跃 学习阅读的阶段 阅读准备阶段–幼儿园 良好的视力与听力 起码的认知能力、记忆力 语言能力：口齿 注意力、服从性 看图识字、认字—1-3年级 建立字汇、对课文运用—4-6年级 精练与增进上述技巧、开始消化阅读—初中 4、阅读的第二个层次：检视阅读检视阅读分为两种（一）：有系统的略读skim或粗读pre-read判断这本书值不值得花时间仔细阅读 把自己当成侦探 方法： 看书名页、有序先看序 研究目录页，有的有纲要目录（《罗马帝国衰亡史》） 索引 新书可以看看出版社的介绍 找几篇与主题相关的篇章看看 随便翻翻几页 （二）：粗浅的阅读头一次面对一本难度的书的时候，从头到尾先读完一遍，遇到不懂的地方不要停下来查询或思索 从头到尾读一遍后，在后来重读第一次略过的地方的时候增进理解 阅读的速度 ​ 要能选择不同的速度来阅读不同的材料 逗留与倒退 ​ 有时候读的太粗，导致会反复会跳到不理解的地方 ​ 要练习“一瞥而知全貌”的能力 ​ 一种连练习方式：让手指移动的快一些，而眼睛随着手指而动，练提高阅读速度 理解的问题 ​ 专注要提升 ​ 华丽的辞藻可以忽视、严谨的定义应该细细分析 5、如何做一个自我要求的读者阅读要有仪式感： 保持清醒 环境良好 光照 位置 ☀🌔主动地阅读基础–阅读四个基本问题 整体来书哦，这本书到底在谈什么？ 作者细部说了什么？怎么说的？ 这本书说的有道理吗？全部有道理，还是部分有道理？ 这本书与我有什么关系？ 以上都是分析书的内容（粗、细、正确性、实用性） ☀为什么人会对读一本好书感到疲倦？ ​ 人们在读一本好书的时候会打瞌睡，并不是他们不想努力，而是因为他们不知道要如何努力。你挂念着想读的好书太多了（如果不是挂念着，也算不上你觉得的好书），而除非你能真正起身接触它们，把自己提升到同样的层次，否则你所挂念的 这些好书只会使你厌倦而已。 ​ 并不是起身的本身在让你疲倦，而是因为你欠缺有效运用自我提升的技巧，在挫败中产生了沮丧，因而才感到疲倦。 ​ 要保持主动的阅读，你不只是要有意愿这么做而已，还要有技巧—-能战胜最初觉得自己能力不足部分，进而自我提升的艺术。 ⭐如何让一本书真的属于你自己 ​ 你买了一本书，就像是买了一项资产，和你付钱买衣服或者家具是一样的。但是就一本书来说，付钱购买的动作却不过是真正拥有这本书的前奏而已。 ​ 要真正完全拥有一本书，必须把这本书变成你自己的一部分才行，而要让书成为你的一部分最好的方法—就是去**写下来**。 做笔记的三大功效 保持清醒 保持思考 帮助记住作者思想 做笔记的三种方法 结构笔记 structural note 记录全书架构，类似对目录的丰富加工 概念笔记 conceptual note 理解作者的立意与观点 辩证笔记 dialectical note ⭐培养阅读的习惯不过是熟能生巧。 ​ 所谓艺术或技巧，只属于那个能养成习惯，（发现规则）而且能依照规则来运作的人。 ​ 艺术的成熟不过是熟能生巧，对艺术家而言，世上没有最终的不可打破的规则。但所有的艺术，都是有一些默认的规则的，甚至是他自创的规则。 ​ 学习类似滑雪，重点在于忘记所有部分的动作，而是连贯在一起，平滑而稳定的转动，但是为了忘记这些单一的动作，一开始你必须先分别学会每一个单一的动作。并成熟连贯起来，才是一个高手。 （0427） 二、阅读的第三个层次-分析阅读6、一本书的分类🌔分析阅读的第一阶段📖分析阅读的规则一：（分类）你要知道自己正在读哪一类书，且越早越好 —- 书名包含了大量的信息 分类原则：实用性VS理论性作品实用性：效用 科技 任何一本教我们如何生活，该做什么不该做什么，同时说明做了会有什么奖赏，不做会有什么惩罚的书，都是一本实用的书。 实用的书大多滔滔雄辩而又忠告勉励，但有这类属性的书却未必都实用。 实用的书会说“应该”，理论的书会说“是否” 理论性：明白了解某些事情 科学 传统的分法，历史、科学、哲学等会被分到理论性作品里 历史就是纪事 Chronotopic，在希腊文中，chronos是时间，topos是地点。 科学家以实验为基础，或仰赖精确的观察研究；哲学家是坐在摇椅上的思考者。 这当然是不全面的，坐在摇椅上或许可以利用人类共通经验来解决一些问题， 但是对于一些特定问题，需要获得特定的经验，还是要做实地考察或实验。 7、透视一本书掌握一本书的架构，如同x光机一样，看透盛装之人的骨架 📖分析阅读的规则二：（整体性）使用一个单一的句子，或最多几句话（一小段文字）来叙述整本书的内容。 对于“整体内容”这件事光是一个模糊的认知是不够的，你必须要确切清楚地了解才行。 只有一个方法能知道你是否成功了，你必须能用几句话，告诉你自己或别人，这整本书在说的是什么。 不要满足于“感觉上的整体” 📖分析阅读的规则三：（复杂性）列举书中重要篇章，说明他们如何按照顺序组成一个整体的架构 所有的东西都是复杂的组合体。当你看一个整体组成复杂的东西的时候，如果只看出它“怎样呈现一体”的面貌，那是还没有掌握精髓，你还必须要明白它“怎样呈现多个”的面貌—-但不是各自为政，互不相干的“多个”，而是互相融合成有机体的“多个”。 整体不是集合体，而是各个部分之间有有机的关联才能形成一个整体。类似于一堆砖头和一栋房子的区别。 一本好书真的很像一个好房子，每个部分都要很有秩序地排列，每个重要部分都要有一定的独立性。每个单一部分有自己的室内架构，装潢也可以各有特色，但是与其他部分一定要联系起来。 好房好住，好书好读。 为一部分好书制作详细的大纲架构，但不必追求尽善尽美。 大纲注释可能比原著还长（注经–亚里士多德、康德…）。 阅读与写作写作与阅读一体两面，就像教书与被教，正如费曼学习法（教授他人来巩固自己理解）。 读者是要发现骨架，作者是要讲骨架隐藏在血肉之中。 某种意义上，血肉同样重要，为全书增添了必要的空间与深度。 📖发现作者的意图作者在写作时候，是带着目的和问题的，这本书的内容或许就是答案，那么读者就可以从中找明坐着的目的和他给的答案，或者给出自己的回答。 8、与作者找出共通的词义之前的四规则，是完成分析阅读的第一个阶段。这告诉我们一本书的内容是什么，如何将架构列成纲要。 🌔分析阅读的第二阶段📖分析阅读的规则四：分析词义找出共通的词义 词义term与单字Word不同。读者可能会误读，也就是和作者的沟通存在模糊地带。 沟通 communication 字根来自于共通 common 类似于社群 community 当一个单字使用得没有模糊意义的时候，它就是一个词义了 词义只能在沟通的过程中才会出现，换句话说要联系上下文 📖分析阅读的规则五：找关键字，达成共识找出重要单字，并确认这些单字在使用时最精确的意义 一个单字可能代表许多不同的词义，而一个词义可以用许多不同的单字来解释。 第一步：处理语言；第二步：超越语言，处理语言背后的思想涵义。 语言并不是完美的传递知识的媒介，在沟通时也会有形成障碍的作用。 我们可以期望一个好作者尽可能穿过语言所无法避免形成的障碍，和我们接触。 但我们不能期望只由他来完成这项工作。我们应该在半途就与他相会。 （俗称的双向奔赴） 每一个知识领域都有独特的专门用语，类似欧几里得的点线面的定义，亚当斯密的财富的定义，达尔文的物种的定义。 要能区别作者的特殊用语（vocabulary）和专业术语（terminology）之间的不同。 词义容易混淆的地方 一个可以有许多不同意义的字，使用的时候可以只用一个意义 同义字 片语（phrase），如果一个片语是独立的单位（可以用作主语、谓语），那就可以把它看成单字 （0428上午，读了三章） 9、判断作者的主旨 书的世界如同生意的世界，不但要达成共识，还要懂得提案。即声明主旨。 作者的声明，是他的某种判断，是他写这本书的目的 主旨 Proposition 第一阶段的目的是为了掌握结构大纲，第二阶段的目的是为了诠释作者意图，这两步互相交织，犹如芭蕾舞者的双足轨迹，交织舞动。 📖分析阅读的规则六：找出重要的句子，抓住主要主旨将一本书里最重要的句子圈出来，找出其中主旨。 句子和主旨句子和段落是文法、语言的单位。 主旨与论述是逻辑的单位，也就是思想与知识的单位。 句子和主旨不是一对一的关系，类似单字与词义。需要进行辨认。 找到关键句 阅读起来有一定难度的句子 作者下的肯定或否定的判断，以及为什么这么做的理由 作者自己的特别标注：下划线，加粗，段落安排，标注 找出重要的单字所在的句子 前提/结论 找到主旨 当你发现一段话里所使用得文字的意义时，你就和作者找到了共识。同样的，诠释过组成句子的每个字，特别是关键字之后，你就会发现主旨。 “用你自己的话来说”，是测验你懂不懂一个句子的主旨最佳方案。—翻译 另一个测验就是你能不能举出一个自己经历的主旨所形容的经验，将作者阐述的特殊情况的主旨，推而广之。 📖分析阅读的规则七：论述，架构前因后果，明白作者的主张找到论述从相关文句的关联中，设法架构一本书的基本论述。 如果可能，找出书中说明重要论述的段落。但是，如果这个论述并没有这样表达出来，你需要自己架构出来，你需要从不同段落挑选句子出来，然后整理出前后顺序的主旨，以及其组成的论述。 关于运用规则的一些要点 记住所有的论述都包含了一些声明，有些事理由，有些是结论 区别两种论述的不同之处，共通之处 找出作者认为哪些是假设，哪些是推论，哪些是自明公理。 📖分析阅读的规则八：找出作者的解答和未解至此我们已经理解了这本书，甚至开始和作者辩论，试图超越这本书。 10、公正地评断一本书作者说完话后，读者有权，有责任，有机会，也应该有能力自己说话。 主动的阅读不会为了一件了解一本书在说些上面而停顿下来，必须能评论，提出批评，才算真正完成了这件事。 🌔分析阅读的第三阶段受教的美德受教并不是卑躬屈膝，一个人不能自动自发地运用独立的判断力，他不可能学习到任何东西，只能说是受训。 最能学习的读者，也就是最能批评的读者。 修辞的作用沟通，传达思想。 📖分析阅读的规则九：在完全理解之前延缓发言在表达意见之前，你得先充分理解书的内容 书读了一部分，或者这本书与其他的书有关联，都得看了才能说进一步理解。 甚至需要充分了解作者的其他作品，以及他的生平，与他同时期论道的作者的作品，才能说得上充分。 📖分析阅读的规则十：避免争强好辩理性地表达自己的意见，不要无理辩驳或者争论 把谈话当做是战争的人，要赢得战争就得为了反对而反对，不论自己对错，都要反对成功。这种人以这种心态来阅读，不过是在书中找到反对的地方罢了。 读者在自己书房和一本书对话时候，没什么阻止他去赢得这场争辩。 真正的赢，是增进知识，追求真理。争强好辩毫无益处。 📖分析阅读的规则十一：尊重差异，作评论之前，找出理论基础不要绝望地与不同意见对抗 人类是复杂的动物，理性和非理性交织，语言是不完美的媒介，情绪和偏见，阶级和地位，知识水平的不平等。 很多情况下，排除误解，增加知识就能解决这些针轮，但很多人不认为争议时教导与受教的过程，他们认为这是观点问题，甚至是权利问题–个人观点如同个人财产一样有神圣不可侵犯的权利。这样他们只能不输而已，对于追求真理的公赛而言，并没有谁进步了。 （0429） 11、赞同或反对作者读懂一本书，并不意味着完全赞成作者。 读者不只是盲目地跟从作者的论点，还能和作者的论点针锋相对是，他最后才能提出同意或反对的有意义的评论。 表达自己的看法应该避免偏见或情绪化（事实上很难）： 因为人的理性与动物性互相斗争，所以争辩时，要注意带入的情绪或脾气，否则你的争论会流于情绪化，而不是说理。你情绪强烈，并不意味着你很有道理。 你要把自己的前提或假设说出来，在纠正别人的偏见，你首先要知道自己的偏见-预先判断是什么。一场好的辩论是不会为了假设而吵架的。如果双方不能接受双方有各自的前提，而又不愿意承认自己是偏见，那么就不能进行公平地表达意见了。 派别之争几乎难以避免地造成一些盲点。争论时尽量多一些理性的光，少一些激情的热。参与辩论的人至少都应该从对方的立场考虑过。要保持一定的同理心。 你对作者的四类批评 你的知识不足 uninformed 缺少某些与他想要解决问题相关的知识。 支持自己的观点 阐述作者缺乏的知识 这些知识如何与这个问题相关 如果有了这些知识，他的结论会有如何不同 你的知识有错误 misinformed 理念不正确 可能来自缺乏支持，也可能由于作者自己的偏见 支持自己的观点 说明事实 采取比作者更有可能性的相反立场 前两点的批评是互相有关联的，这两点合在一起，指出的是作者的前提有缺陷，质和量都不够好。为此，需要有充足的知识。 你不合逻辑–你的推论难以令人信服 推论荒谬 缺乏连贯–结论和前面的理论不一致 时间变化的前后不一致–前后矛盾 支持自己的观点 例举精确的证据，打倒他的论点 你的分析不够完整 他并没有解决他一开始提出来的所有问题 他并没有尽可能善用他手边的资料， 他并没有看出其间的含意和纵横交错的关系 他没法使自己与众不同，只能泯然众人 但这些批评可以用在所有书上，除非读者能精确指出书中问题（无论是靠自己还是有外力帮助），才能做这种批评 严格意义上，第四点并不能作为不同意一个作者的论据。只能说是作者成就有限这一点而站在对立面上。 读者不能随意对作者做出如此批评，除非他能证明这些批评站得住脚。 ☀总结：分析阅读的三阶段第一阶段：找出一本书在谈些什么 依照书的种类与主题来分类 使用最简短的文字说明整本书在谈些什么 将主要部分按顺序与关联性列举出来。将全书的大纲列举出来，并将各个部分的大纲也列出来。 确定作者想要解决的问题。 第二阶段：诠释一本书的内容规则（内容是什么？是如何写出的？） 诠释作者的关键字，与他达成共识 由最重要的句子中，抓住作者的重要主旨 知道作者的论述是什么，从内容中找出相关的句子，在重新架构出来 确定作者已经解决了哪些问题，还有那些事没解决的。再判断哪些是作者知道他没解决的问题 第三阶段：像是沟通知识一样地评论一本书的规则（这是真实的吗？有意义的吗？） A.智慧理解的一般规则 除非你已经完成大纲架构，也能诠释整本书了，否贼不要轻易批评。 不要争强好胜，非辩到底不可 在说出评论之前，你要能证明自己区别得出真正的知识与个人观点的不同 B.批评观点的特别标准 证明作者的知识不足 证明作者的知识错误 证明作者不合逻辑 证明作者的分析和理由是不完整的。 一个读得很广泛，却读不精的人，与其值得赞美，不如值得同情。 “如果我像一般人一样读那么多书，我就跟他们一样愚蠢了” – 霍布斯 （0505） 12、辅助阅读内在阅读（intrinsic reading） – 阅读书籍的本身 除了书籍本身以外的任何辅助阅读都可以被称为外在阅读 ”extrinsic reading“ 我们不应该，也不可能完全孤立地阅读一本书 常见的外在辅助来源1.相关经验​ 一般经验（人人可见可得）与特殊经验（需要主动探求） 2.其他的书​ 许多伟大的作品不只是互相有关联，而且在写作时还有特定的先后顺序（后人受前人影响，作者个人前后风格变化等等） 外在辅助阅读的主要功用在于延伸与一本书相关的内容脉络。正如文章的脉络有助于诠释字义与句子，找出共识与主旨。就像一整本书的脉络是由各个部分贯穿起来一样，相关的书籍也能提供一个大型的网路脉络，以帮助你诠释你正在阅读的书。 3.导论和摘要导读（commentary）和摘要（abstract) 这种方式，要用的聪明，也得少用。 阅读手册（handbook）与阅读指南（manual）常常会造成误导。应付考试或者知识速记有些帮助，但是自以为是的导读，往往会限制你对一本书完整性的理解。哪怕你的理解是对的。 摘要决不能代替阅读，但是有时候可以告诉你这本书值不值得读。 4.工具书字典和百科全书 使用工具书的四个要点 1.必须有自己的想法 ​ 你想要知道什么？不然很容易溺在知识的汪洋里 2.一定要知道在哪里找到你要找的答案 3.你要知道这本工具书是怎么组织的 4.你得知道作者或者编者知道这个答案 字典： 文字是物质的 文字是语言的一部分 文字是符号 文字是约定俗成的 百科全书： 事实是一种说法（proposition） 事实是一种真实的说法–一般人同意的事情 事实是真相的反映–资讯/不受怀疑的推论 事实是某种程度上的约定俗成 三、阅读不同读物的方法13、如何阅读实用型的书 论说性作品的部分，我们谈过基本上要区分出实用性与理论性两种作品–前者是有关行动的问题，后者只与要传递的知识有关。 我们也说过，理论性的知识可以进一步划分为历史、科学（与数学）、哲学 实用性作品则没有任何界限。 任何实用性的书都不能解决该书关心的实际问题，最终还是要靠实践的才能解决实际的问题 由于实践的复杂性，实用性的书并不能完全充当操作手册，但多少还是提供一些可以应用在同类型特殊状况中的通用规则。这也要求读者有一定的判断力，才能在实操中了解实际情况，将规则应用在特定状况中。 规则与理论的异同规则与原理的结合，就是事物的理论。理论性的原则会归纳出出色的行事规则。 由此可以将实用型的书分为“讲规则”和“谈道理”两类。 评断一本实用型的书时，所有的事都与结果及目标有关，读者的判断主要是与结果达成共识，而不是方法 可以试着问自己这两个问题： 作者的目的是什么？ 他建议用什么方法达到这个目的？ 你可以知道为什么实用书的作者多少都是个雄辩家或宣传家。因为你对他作品最终的评断是来自你是否接受他的结论，与他提议的方法。 这完全要看作者能不能将你引导到他的结论上。 要这么做，他讨论的方法必须要能打动你的心智。他可能必须激起你的情绪反应，左右你的意志。 一个人如果真的读懂了一本实用的书，他会知道这本书的基本共识、主旨、论述是什么，就能觉察出作者的雄辩。需要有一定的抵抗力，但又不是完全不接受所有内容。 另外，因为实用问题的特性，作者的“性格”在实用书中的重要性比起理论书中要重要的多，看一本哲学、历史、经济方面的书籍，你应当去了解成书的背景。 （0506） 14、如何阅读想象文学想象文学的主要目的是娱乐，而非教育。 想象文学是在阐述一个经验本身 我们都是通过感官与想象来体验事情。我们都是运用判断与推论，也就是理智，才能理解事情。这并不是强调两者的区分，而是强弱的关系。 读想象文学的“不要” 不要抗拒想象文学带给你的影响力 ​ 想象文学会尽量使用文字潜藏的多重字义，好让这些字特有的多元性增加文章的丰富性与渲染力。 ​ 论说类作品的逻辑目标则是完全清晰，毫无言外之意的解说（那道德经算什么？） 在想象文学中，不要去找共识、主旨、或论述。那是逻辑的，不是诗的。 不要用适用于传递知识的，与真理一致的标准来批评小说。 阅读想象文学的一般规则正常阅读论说类作品的三组原则：架构性、诠释性、评论性 架构性：分类；抓住大意；发现各部分如何架构 诠释性：熟知角色与事件；试着身临其境，找出关联；随之完成故事 批评性： ​ 在你衷心感激作者试着为你创造的经验之前，不要批评一本想象的作品。 ​ 一个好读者不会质疑作者所创造出来，而在他自己心中又重新创造一遍的世界 ​ 对于小说，我们不该赞成或反对，而是喜欢不喜欢。以及为什么喜欢或不喜欢。 15、阅读故事、戏剧与诗的一些建议 暴君并不怕唠叨的作家宣扬自由的思想–他害怕一个醉酒的诗人说了一个笑话，吸引了全民的注意力。 –E.B.White 阅读故事书的建议：快读、并全心全意地读。理想上来说，应该一口气读完一个故事 小说或虚构故事不可或缺因为小说能满足我们潜意识或意识中许多的需要。小说能触及我们的潜意识层面，一种feel 作者好像上帝，在书中行使他的“公理正义”，一个坏故事惹人讨厌的一点就是，一个人受奖励或惩罚一点都不合情合理。 阅读史诗的重点阅读史诗的困难在于如何跟随作品逐步升高那种环绕着主题的追寻。 建议阅读 荷马的《伊利亚特》和《奥德赛》，维吉尔的《埃涅阿斯纪》，但丁的《神曲》和弥尔顿的《失乐园》 阅读剧本剧本不是一个完整的作品，就好像乐谱一样，你只能假装看到演出的实景。 严格意义上来说，剧本是不值得读的。 阅读抒情诗Lyric Poetry 诗有一种很古老的观念，那就是诗人要向内心深处探索，才能创造出他们的诗句。因此，他们的心灵深处是一片神秘的“创造之泉” 第一规则：不论你觉得自己懂不懂，都要一口气读完，不要停。 第二规则：重读一遍，大声读出来，类似读剧本，但剧本是可读可不读，诗是必选项 第三建议：阅读诗人，一定要多知道他们的一些背景资料。 16、如何阅读历史书 首先，就事实而言的历史（history as fact）与就书写历史而言的历史（history as a written record of the tacts)是不同的。 就“阅读历史”里的历史而言， ​ 狭义的话，是希望历史限制在针对过去某段时期、某个事件或一连串的事件，来进行基本上属于叙事风格，多少比较正式的描述。 ​ 广义的话，我们认为历史的基本是叙事的，所谓的事指的就是“故事”，就算是一堆文状的收集，说的还是故事，这些故事可能没有解说或是整理，但是不管有没有秩序，其中都隐含着主题。 历史家的理论会影响到他对历史事件的描述。 修昔底德的记录，似乎是伯罗奔尼撒战争留下的唯一遗物了，但是他事实上不断地影响着后面的读者，他们把自己比作雅典或斯巴达，他们把修昔底德当做借口或者辩解的理由，甚至行为模式的指引。所以我们阅读这个公元前五世纪的著作，实际上是为了想要了解目前发生的事情。 阅读历史时的问题 每本历史书都有一个特殊且有限定范围的主题 历史书说的故事，以及他说故事的方式。 阅读历史的要点 对你感兴趣的事件或时期，尽可能阅读一种以上的历史书（多角度） 阅读历史时，不要只关心在过去某个时间、地点真正发生了什么事。还要读懂在任何时空中，尤其是现在，人们为什么会有如此这般行动的原因。（结合当下实际） 批评历史的方式 这本历史书不够逼真，认为作者用错或者误读了历史事实 作者误用了资料，或是缺少一些我们认为重要的史实。 与现实的联系 阅读传记和自传传记传记有很多种类型，如定案本（definitive）和授权本（authorized） 定案本是对一个人的一生做详尽完整的学术性报告。 授权本往往是由继承人，或是某个重要人物的朋友完成的。这个人的成就和错误往往都会被润饰。 自传自传很难称得上是一本真实的自传，首先，所有自传写的都还是未完结的生活，其次，当没人能反驳你的时候，你可能会掩盖事实或夸大事实，这一点无可避免。 阅读传记也像阅读历史，一些故事的真伪不能证明，要怀着某种怀疑心，并关注其中启发性的，于我们生活有指引作用的部分。 阅读当前的事件历史并没有在一千年或一百年前停顿下来，世界仍在继续运转，身为一个人及世界的公民，我们有义务去了解围绕在我们身边的世界。 很容易发现面对当下的问题，和我们阅读历史时没有很大的区别的。就像我们无法确定过去的事实一样，我们不能确定我们所获得的是不是事实，但我们还是要努力去了解真实的情况。 我们在了解当下的事实的时候，都是通过记者的报导，所以有时候比起阅读本身，是谁在写这篇报导可能也很重要。 关于记者的问题 这个作者想要证明什么？ 他想要说服谁？ 他具有的特殊知识是什么？（观念，偏见，假设） 他使用得特殊语言是什么？（一些关键词，一些专用术语） 他真的知道自己在说什么吗？（记者是否真的了解事实，他知识是否足够，他立场是否公正） 阅读文摘（digest）阅读新闻类的文摘主要是为了获取资讯。 而文学类的文摘，往往唯一功能就是提供原著的一些大意，并激励我们去阅读原著。 读者得从专业浓缩的句子中得出言外之意。 17、如何阅读科学与数学第一类：伟大的科学与数学的经典之作 第二类：现代科普著作 知道19世纪末，主要的科学著作是写给门外汉看的，而随着近代以来科技的发展，科学已经过了爱因斯坦所说的“科学的快乐童年时代”，科学专业的制度已经建立起来。科学论文已经变成专家写给专家看的东西了。 要跟上科学发展的脚步，找出事实、假定、原理与证据之间的互相关联，就是参与了人类理性的活动，而那可能是人类最成功的领域。也许，光这一点就能印证科学历史研究的价值了。此外这样的研究还能在某种程度上消除一些对科学的谬误。最重要的是，那是与教育的根本相关的脑力活动，也是从苏格拉底到我们以来，一直被认为是中心的目标，也就是通过怀疑的训练，而释放出一个自由开放的心灵。 阅读科学经典名著的建议科学的客观不在于没有最初的偏见，而在于坦白承认。 科学的两种论述方法 归纳法 即通过研究查证，建立出来的一个通则。 演绎法 通过其他已经证明过的理论，推论出来的 ​ 任何自然科学的分支都要包含三个部分：在这个科学主题中的连续事实、呈现这些事实的想法、以及表达这些事实的语言…… 因为想法是由语言来保留与沟通的，如果我么没法改进科学的本身，就没法促进科学语言的进步。换个角度来看也一样，我们不可能只改进科学的语言或术语，却不改进科学的本身。 ​ ——拉瓦锡 面对数学的问题符号盲（Symble blindness）：无法放下对实体的依赖，转而理解在控制下的符号转换 数学其实是一种语言，而且是一种书写语言。 Q.E.F（Quod erat faciendum）作图完毕 Q.E.D（Quod erat demonstrandum）证明完毕 掌握科普书的重点科普书毕竟是为了大众写的，能进入你视野都可以说是某种流行畅销书，为了做到这一点，作者已经避免了两大难点，他们只谈论一点相关的实验内容，以及他们的内容很少牵扯公式推导和数学。 科普书如果不全神贯注，就无法理解。 （0509） 18、如何阅读哲学书19、如何阅读社会科学四、阅读的最终目标20、阅读的第四个层次：主题阅读21、阅读与心智的成长","categories":[{"name":"技术","slug":"技术","permalink":"https://lilsaey.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"阅读","slug":"阅读","permalink":"https://lilsaey.github.io/tags/%E9%98%85%E8%AF%BB/"}]}],"categories":[{"name":"艺术","slug":"艺术","permalink":"https://lilsaey.github.io/categories/%E8%89%BA%E6%9C%AF/"},{"name":"技术","slug":"技术","permalink":"https://lilsaey.github.io/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"提问","slug":"提问","permalink":"https://lilsaey.github.io/tags/%E6%8F%90%E9%97%AE/"},{"name":"文档","slug":"文档","permalink":"https://lilsaey.github.io/tags/%E6%96%87%E6%A1%A3/"},{"name":"阅读","slug":"阅读","permalink":"https://lilsaey.github.io/tags/%E9%98%85%E8%AF%BB/"}]}